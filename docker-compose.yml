services:
  db:
    image: postgres:14-alpine
    container_name: chat-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-chatapp}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatapp123}
      POSTGRES_DB: ${POSTGRES_DB:-chatapp}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-chatapp} -d ${POSTGRES_DB:-chatapp}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - chat-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: chat-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgres://${POSTGRES_USER:-chatapp}:${POSTGRES_PASSWORD:-chatapp123}@db:5432/${POSTGRES_DB:-chatapp}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      PORT: 4000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/app/server
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - chat-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: chat-frontend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:4000}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./components:/app/components
      - ./lib:/app/lib
      - /app/node_modules
      - /app/.next
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge

volumes:
  postgres_data:
    name: chat-db-data